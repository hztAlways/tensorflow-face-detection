# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: object_detection/protos/string_int_label_map.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
# 根据Python版本，定义了一个处理字符串的_lambda_函数。
from google.protobuf import descriptor as _descriptor
# 导入Protocol Buffers中的descriptor模块，用于描述.proto文件中的消息类型和字段。
from google.protobuf import message as _message
# 导入Protocol Buffers中的message模块，用于处理消息对象。
from google.protobuf import reflection as _reflection
# 导入Protocol Buffers中的reflection模块，用于生成反射类。
from google.protobuf import symbol_database as _symbol_database
# 导入Protocol Buffers中的symbol_database模块，用于注册和查找符号。
from google.protobuf import descriptor_pb2
# 导入Protocol Buffers中的descriptor_pb2模块，包含描述符的协议消息定义。

# @@protoc_insertion_point(imports)
# protoc插入点，用于在生成代码中插入特定内容。

_sym_db = _symbol_database.Default()
# 创建一个默认的符号数据库实例。

# 创建了一个文件描述符对象，用于描述 object_detection/protos/string_int_label_map.proto 文件的结构和包含的消息类型，以便在 TensorFlow 目标检测项目中使用。
DESCRIPTOR = _descriptor.FileDescriptor(
  name='object_detection/protos/string_int_label_map.proto',
  package='object_detection.protos',
  serialized_pb=_b('\n2object_detection/protos/string_int_label_map.proto\x12\x17object_detection.protos\"G\n\x15StringIntLabelMapItem\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\n\n\x02id\x18\x02 \x01(\x05\x12\x14\n\x0c\x64isplay_name\x18\x03 \x01(\t\"Q\n\x11StringIntLabelMap\x12<\n\x04item\x18\x01 \x03(\x0b\x32..object_detection.protos.StringIntLabelMapItem')
)
# 指定了文件的序列化内容。这个内容是 Protocol Buffers 编译器生成的文件的二进制表示，其中包含了消息类型、字段和其他相关信息。
_sym_db.RegisterFileDescriptor(DESCRIPTOR)
# 在符号数据库中注册文件描述符。

# 定义了一个名为 _STRINGINTLABELMAPITEM 的消息类型，用于表示字符串到整数标签映射的条目。
_STRINGINTLABELMAPITEM = _descriptor.Descriptor(
  name='StringIntLabelMapItem',
  full_name='object_detection.protos.StringIntLabelMapItem',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='object_detection.protos.StringIntLabelMapItem.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    # 定义了name字段，类型为字符串。
    _descriptor.FieldDescriptor(
      name='id', full_name='object_detection.protos.StringIntLabelMapItem.id', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    # 定义了id字段，类型为整数。
    _descriptor.FieldDescriptor(
      name='display_name', full_name='object_detection.protos.StringIntLabelMapItem.display_name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    # 定义了display_name字段，类型为字符串。
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=79,
  serialized_end=150,
)

# 定义了一个名为 _STRINGINTLABELMAP 的消息类型，用于表示包含多个 StringIntLabelMapItem 的映射。
_STRINGINTLABELMAP = _descriptor.Descriptor(
  name='StringIntLabelMap',
  full_name='object_detection.protos.StringIntLabelMap',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='item', full_name='object_detection.protos.StringIntLabelMap.item', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    # 定义了item字段，类型为重复的 StringIntLabelMapItem。
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=152,
  serialized_end=233,
)

_STRINGINTLABELMAP.fields_by_name['item'].message_type = _STRINGINTLABELMAPITEM
# 指定item字段的消息类型为 StringIntLabelMapItem。
DESCRIPTOR.message_types_by_name['StringIntLabelMapItem'] = _STRINGINTLABELMAPITEM
# 在文件描述符中注册 StringIntLabelMapItem 消息类型。
DESCRIPTOR.message_types_by_name['StringIntLabelMap'] = _STRINGINTLABELMAP
# 在文件描述符中注册 StringIntLabelMap 消息类型。

StringIntLabelMapItem = _reflection.GeneratedProtocolMessageType('StringIntLabelMapItem', (_message.Message,), dict(
  DESCRIPTOR = _STRINGINTLABELMAPITEM,
  __module__ = 'object_detection.protos.string_int_label_map_pb2'
  # @@protoc_insertion_point(class_scope:object_detection.protos.StringIntLabelMapItem)
  ))
# 生成 StringIntLabelMapItem 消息类型的反射类，并在符号数据库中注册。

_sym_db.RegisterMessage(StringIntLabelMapItem)
# 在符号数据库中注册 StringIntLabelMapItem 消息。

StringIntLabelMap = _reflection.GeneratedProtocolMessageType('StringIntLabelMap', (_message.Message,), dict(
  DESCRIPTOR = _STRINGINTLABELMAP,
  __module__ = 'object_detection.protos.string_int_label_map_pb2'
  # @@protoc_insertion_point(class_scope:object_detection.protos.StringIntLabelMap)
  ))
# 生成 StringIntLabelMap 消息类型的反射类，并在符号数据库中注册。

_sym_db.RegisterMessage(StringIntLabelMap)
# 在符号数据库中注册 StringIntLabelMap 消息。

# @@protoc_insertion_point(module_scope)
# protoc插入点，用于在生成代码中插入特定内容。
